# 2つの隣り合う文字数を抽出して、最も登場回数が多い数値を出す
# [0][1],[1][2],[2][3]......

import re
# Python標準ライブラリcollectionsにCounterクラスがある。
# https://note.nkmk.me/python-collections-counter/
from collections import Counter

nums = '14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912'

li = [(i+j) for (i,j) in zip(nums[::2],nums[1::2])]
print(li)
# 頭の1を落として、[1][2]から始まる数列をつくる→[0][1],[2][3]....の数列にドッキング
new_nums = nums[1:]
li2 = [(j+k) for (j,k) in zip(new_nums[::2],new_nums[1::2])]
li.extend(li2)
print(li)
# Counterオブジェクトを使うと、数列内に何回その要素が登場しているか数えて、大きいほうから出力してくれる
print(Counter(li))